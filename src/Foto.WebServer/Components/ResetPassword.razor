@using Foto.WebServer.Services
@inject IUserService UserService

<div class="modal fade" id="passwordResetForm" aria-hidden="false" aria-labelledby="passwordResetFormLabel" tabindex="-1">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="passwordResetFormLabel">Återställ lösenord</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <CvEditForm id="uploadForm" Model="_formModel" class="form" OnValidSubmit="@HandleValidSubmit">
                <FluentValidationValidator/>
                <div class="modal-body">

                    @if (_successful)
                    {
                        <div class="form-group mt-1">
                            <span>@SuccessText</span>
                        </div>
                    }
                    else
                    {
                        <div class="form-group mt-1">
                            <label for="email">E-post:</label>
                            <InputText id="email" class="form-control app-input-wide" @bind-Value="@_formModel.Email"/>
                            <ValidationMessage class="text-danger" For="@(() => _formModel.Email)"/>
                        </div>
                    }
                </div>
                <div class="modal-footer">
                    @if (!_successful)
                    {
                        <button type="submit" class="btn btn-primary">Skicka</button>
                    }
                    else
                    {
                        <button type="button" class="btn btn-primary" data-bs-target="#passwordResetForm" data-bs-toggle="modal">Ok</button>
                    }
                </div>
            </CvEditForm>
        </div>
    </div>
</div>

@code {
    private readonly EmailFormModel _formModel = new();

    private record EmailFormModel
    {
        public string Email { get; set; } = "";
    }

    private const string SuccessText = "Länk för återställning av lösenord skickats. Kolla i din inkorg eller skräppost. Om du inte fått meddelandet inom kort, kontrollera att du skrivit in rätt e-postadress.";
    private bool _successful;

    private async Task HandleValidSubmit()
    {
        await UserService.SendPasswordResetEmail(_formModel.Email);

        _successful = true;
        _formModel.Email = "";
        StateHasChanged();
    }

}