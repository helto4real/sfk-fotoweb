@page "/admin/users/list"
@layout MainLayout
@using Foto.WebServer.Dto
@using Foto.WebServer.Services
@using Microsoft.AspNetCore.Authorization
@inherits AuthorizedBasePage
@attribute [Authorize(Roles = "Admin")]
@inject IUserService UserService

<div class="container d-flex flex-column justify-content-center align-items-center">
    <div class="row row-cols-auto align-items-center">
        <h2>Lista användare</h2>
    </div>
</div>

<div class="container">
    <div class="row g-3 mb-5 justify-content-center align-items-center">
        <div class="col col-8" style="max-width: 350px;">
            <table class="table table-striped table-bordered table-hover">
                <thead>
                <tr>
                    <th scope="col">Username</th>
                    <th scope="col"></th>
                </tr>
                </thead>
                <tbody>
                @foreach (var user in _users)
                {
                    <tr >
                        <td>@user.Username</td>
                        <td><NavLink href="@GetUserEditLink(user.Username)"><span>Redigera</span></NavLink></td>
                    </tr>
                }
                </tbody>
            </table>
        </div>
    </div>
</div>
@if (_responseHandler.HasAlert)
{
    <div class="alert alert-danger">@(_responseHandler.Message)</div>
}

@code {
    
    [Parameter]
    public string[] SocialProviders { get; set; } = Array.Empty<string>();

    private readonly List<UserInfo> _users = new();
    private readonly ResponseHandler _responseHandler = new();

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            var result = await UserService.GetAllUsers();
            var users = _responseHandler.CheckResponse(result);
            if (users is not null)
            {
                foreach (var user in users) 
                {
                    _users.Add(new UserInfo{Username = user.UserName});
                }
                StateHasChanged();
            }
        }
        await base.OnAfterRenderAsync(firstRender);
    }
    
    static string GetUserEditLink(string username)
    {
        return $"/admin/users/edit/{username}";
    }    
    

}