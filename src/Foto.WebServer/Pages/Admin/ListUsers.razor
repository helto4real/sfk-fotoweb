@page "/admin/users/list"
@layout MainLayout
@using Foto.WebServer.Dto
@using Foto.WebServer.Services
@using Microsoft.AspNetCore.Components.Authorization
@inherits AuthorizedBasePage
@inject IAdminService AdminService

<div class="container d-flex flex-column justify-content-center align-items-center">
    <div class="row row-cols-auto align-items-center">
        <h2>Lista användare</h2>
    </div>
</div>
<AuthorizeView Roles="Admin">
     <Authorizing>
            <div class="container">
                <div class="row g-3 mb-5 justify-content-center align-items-center">
                    <div class="col col-8" style="max-width: 300px;">
                        <p>Authorizing user</p>
                    </div>
                </div>
            </div>
        </Authorizing>
    <Authorized>
        <div class="container">
            <div class="row g-3 mb-5 justify-content-center align-items-center">
                <div class="col col-8" style="max-width: 300px;">
                    <table class="table table-striped table-bordered table-hover">
                        <thead>
                        <tr>
                            <th scope="col">Username</th>
                            <th scope="col">Admin</th>
                            <th scope="col"></th>
                        </tr>
                        </thead>
                        <tbody>
                        @foreach (var user in _users)
                        {
                            <tr >
                                <td>@user.Username</td>
                                <td><input type="checkbox" checked="@user.IsAdmin" disabled/></td>
                                <td><NavLink href="@GetUserEditLink(user.Username)"><span>Edit</span></NavLink></td>
                            </tr>
                        }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </Authorized>
</AuthorizeView>
    


@code {
   
    private NewUserInfo? User { get; set; } = new NewUserInfo();
    
    [Parameter]
    public string[] SocialProviders { get; set; } = Array.Empty<string>();

    private List<UserInfo> _users = new List<UserInfo>();
    
    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        foreach (var user in await AdminService.GetAllUsers())
        {
            _users.Add(new UserInfo{Username = user.UserName, IsAdmin = user.IsAdmin});
        }
        StateHasChanged();
    }
    
    string GetUserEditLink(string username)
    {
        return $"/admin/users/edit/{username}";
    }

}