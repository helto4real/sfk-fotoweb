@page "/admin/st-bild/edit/{stbildId:guid}"
@inherits AuthorizedBasePage
@attribute [Authorize(Policy = "StBildAdministratiorPolicy")]
@using Foto.WebServer.Dto
@using Foto.WebServer.Services
@using Microsoft.AspNetCore.Authorization
@inject IStBildService StBildService

<PageTitle>Godkänn ST-bild</PageTitle>
<AppContent ContentMaxWidth="MaxWidth.Small">
    <Title>Godkänn ST-bild</Title>
    <Ingress>Granska bildinformation och godkänn eller avvisa genom att trycka på knapparna!</Ingress>
    <Container>
        @if (_stBild is not null)
        {
            @if (_stBild.IsUsed)
            {
                <MudAlert Severity="@Severity.Warning">
                    Bilden är redan paketerad och skickad till ST och det går inte längre att ändra godkännande.
                </MudAlert>
            }
            else
            {
                <AppForm >
                    <Form>
                        <MudField Variant="Variant.Text"
                                  Label="Rubrik">
                            @_stBild.Title
                            @_stBild.Name
                        </MudField>
                        <MudField Variant="Variant.Text"
                                  Label="Fotograf">
                            @_stBild.Description
                        </MudField>
                        <MudField Variant="Variant.Text"
                                  Lines="3"
                                  MaxLength="300"
                                  Label="Beskrivning av bilden">
                            @_stBild.AboutThePhotographer
                        </MudField>
                        <MudField Variant="Variant.Text"
                                  Lines="3"
                                  MaxLength="300"
                                  Label="Om dig">
                            @_stBild.Location
                        </MudField>
                        <MudField Variant="Variant.Text"
                                  Label="Vart bilden är tagen">
                            @_stBild.Time
                        </MudField>
                        <MudField Variant="Variant.Text"
                                  InputType="InputType.Date"
                                  Label="När bilden tagen:">
                        </MudField>

                    </Form>
                    <Actions>
                        <MudContainer Class="d-flex justify-center">
                            <MudButton StartIcon="@Icons.Material.Filled.Check" Color="Color.Success" OnClick="OnAccept">Godkänn</MudButton>
                            <MudButton StartIcon="@Icons.Material.Filled.Stop" Color="Color.Error" OnClick="OnReject">Avvisa</MudButton>
                            <MudButton StartIcon="@Icons.Material.Filled.Cancel" Color="Color.Inherit" OnClick="OnCancel">Avbryt</MudButton>
                        </MudContainer>
                    </Actions>
                </AppForm>
            }
        }
    </Container>
</AppContent>

@if (_responseHandler.HasAlert)
{
    <MudAlert Severity="Severity.Error">
        @_responseHandler.Message
    </MudAlert>
}

@code {

    private StBildInfo? _stBild;

    private bool _isPackaged;
    private readonly ResponseHandler _responseHandler = new();

    [Parameter]
    public Guid StbildId { get; set; }

    [SupplyParameterFromQuery]
    public bool IsFromAcceptList { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            var response = await StBildService.GetStBildAsync(StbildId);
            _stBild = _responseHandler.CheckResponse(response) ?? this._stBild;

            if (_stBild is not null)
                _isPackaged = _stBild.IsUsed;
            StateHasChanged();
        }
        await base.OnAfterRenderAsync(firstRender);
    }

    private void OnCancel()
    {
        NavigateBack();
    }

    public async Task OnAccept()
    {
        if (_stBild is not null)
            await StBildService.SetAcceptStatusForStBild(_stBild.Id, true);
        NavigateBack();
    }

    public async Task OnReject()
    {
        if (_stBild is not null)
            await StBildService.SetAcceptStatusForStBild(_stBild.Id, false);

        NavigateBack();
    }

    private void NavigateBack()
    {
        if (IsFromAcceptList)
            NavigationManager?.NavigateTo("/admin/st-bild/godkann");
        else
            NavigationManager?.NavigateTo("/admin/st-bild/hantera");
    }

}