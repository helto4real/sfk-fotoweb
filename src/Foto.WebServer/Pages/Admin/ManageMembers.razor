@page "/admin/members/manage"

@layout MainLayout
@using Foto.WebServer.Dto
@using Foto.WebServer.Services
@using Microsoft.AspNetCore.Authorization
@inherits AuthorizedBasePage
@inject IMemberService MemberService;
@attribute [Authorize(Roles = "Admin")]

<PageTitle>Hantera medlemmar</PageTitle>

<AppContent ContentMaxWidth="MaxWidth.Small" ContentClass="d-flex flex-column justify-content-center align-items-center mt-5">
    <Title>Hantera medlemmar</Title>
    <Ingress>Hanterar medlemsinformation</Ingress>
    <Container>
        <MudTable Filter="new Func<MemberInfo, bool>(FilterFunc)" Hover="true" Items="@_members">
            <ToolBarContent>
                <MudTextField Immediate="true" @bind-Value="_searchString" Placeholder="Sök" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
            </ToolBarContent>
            <HeaderContent>
                <MudTh>Namn</MudTh>
                <MudTh>E-post</MudTh>
                <MudTh>Redigera</MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd DataLabel="Namn">
                    <MudText>@($"{context.FirstName} {context.LastName}")</MudText>
                </MudTd>
                <MudTd DataLabel="E-post">
                    <MudText>@context.Email</MudText>
                </MudTd>
                <MudTd DataLabel="Bild">
                    <MudButton Href="@GetMemberEditLink(context.Id)" Variant="Variant.Text" Color="Color.Primary">Redigera</MudButton>
                </MudTd>
            </RowTemplate>
            <PagerContent>
                <MudTablePager RowsPerPageString="Visa:" PageSizeOptions="new[] { 10, 25, 50, 100, int.MaxValue }" HorizontalAlignment="HorizontalAlignment.Left" HidePageNumber="true" HidePagination="false" HideRowsPerPage="false"/>
            </PagerContent>
        </MudTable>
        <MudButton Class="mr-auto" Href="@("/admin/members/register")" Variant="@Variant.Text" Color="Color.Primary">Registrera ny medlem</MudButton>
    </Container>
</AppContent>

@if (_responseHandler.HasAlert)
{
    <AppAlert Severity="Severity.Error">@_responseHandler.Message</AppAlert>
}

@code {
    private List<MemberInfo> _members = new();
    private readonly ResponseHandler _responseHandler = new();
    private string _searchString = "";

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            var result = await MemberService.ListMembersAsync();
            _members = _responseHandler.CheckResponse(result) ?? _members;
            StateHasChanged();
        }
    }

    private bool FilterFunc(MemberInfo element)
    {
        if (string.IsNullOrWhiteSpace(_searchString))
            return true;
        return element.FirstName.Contains(_searchString, StringComparison.OrdinalIgnoreCase) || 
               element.LastName.Contains(_searchString, StringComparison.OrdinalIgnoreCase);
    }

    private static string GetMemberEditLink(Guid id)
    {
        return $"/admin/members/register/{id}";
    }

}