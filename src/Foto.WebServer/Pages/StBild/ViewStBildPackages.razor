@page "/admin/st-bild/paket"
@using Foto.WebServer.Dto
@using Foto.WebServer.Services
@inherits AuthorizedBasePage
@inject IStBildService StBildService

<PageTitle>Visa ST-paket</PageTitle>

<AppContent ContentMaxWidth="MaxWidth.Small" ContentClass="d-flex flex-column justify-content-center align-items-center mt-5">
    <Title>Visa ST-paket</Title>
    <Ingress>Visa och ladda ner ST-paket för att skicka till Sundsvalls tidning</Ingress>
    <Container>
        @if (_stBildPackages.Any())
        {
            <MudTable Hover="true" Items="@_stBildPackages">
                <HeaderContent>
                    <MudTh>Datum</MudTh>
                    <MudTh>Paket</MudTh>
                    @if (_showDelivered)
                    {
                        <MudTh>Status</MudTh>
                    }
                    <MudTh>Länk</MudTh>
                </HeaderContent>
                <RowTemplate>
                    <MudTd DataLabel="Datum">
                        <MudText>@context.UpdatedDate.ToLocalTime().ToString("d")</MudText>
                    </MudTd>
                    <MudTd DataLabel="Paket">
                        <MudText>@($"Paket {context.PackageNumber}")</MudText>
                    </MudTd>
                    @if (_showDelivered)
                    {
                        <MudTd DataLabel="Status">
                            <MudText>@(context.IsDelivered ? "Hanterad" : "Ej hanterad")</MudText>
                        </MudTd>
                    }
                    <MudTd DataLabel="Länk">
                        <MudLink Href="@GetPackageDownloadLine(context.Id)" download=@($"ST-bilder paket-{context.PackageNumber}.zip")>Ladda ner</MudLink>
                    </MudTd>
                </RowTemplate>
            </MudTable>
        }
        else
        {
            <AppAlert Severity="Severity.Info">
                Det finns inga ST-paket att visa!
            </AppAlert>
            <MudButton Variant="Variant.Text" StartIcon="@Icons.Material.Filled.FolderZip" Class="align-self-center mt-4" 
                       Style="width: 300px" Color="Color.Primary" OnClick="OnChangeShowDelivered">Visa nedladdade paket</MudButton>
        }
    </Container>
</AppContent>

@if (_responseHandler.HasAlert)
{
    <AppAlert Severity="Severity.Error">@_responseHandler.Message</AppAlert>
}

@code {
    List<StBildPackageInfo> _stBildPackages = new();
    private readonly ResponseHandler _responseHandler = new();
    private bool _showDelivered;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            var result = await StBildService.GetStBildPackagesAsync(_showDelivered);
            _stBildPackages = _responseHandler.CheckResponse(result) ?? _stBildPackages;
            StateHasChanged();
        }
        await base.OnAfterRenderAsync(firstRender);
    }

    private string GetPackageDownloadLine(Guid packageId)
    {
        return $"/api/downloads/stpackage/{packageId}";
    }

    private async Task OnChangeShowDelivered()
    {
        _showDelivered = !_showDelivered;
        var result = await StBildService.GetStBildPackagesAsync(_showDelivered);
        _stBildPackages = _responseHandler.CheckResponse(result) ?? _stBildPackages;
        StateHasChanged();
    }

}