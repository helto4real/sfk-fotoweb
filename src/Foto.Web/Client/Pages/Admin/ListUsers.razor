@page "/admin/users/list"
@layout MainLayout
@using Foto.Web.Client.ApiClients
@inherits AuthorizedBasePage
@inject AdminApiClient Client

<div class="container d-flex flex-column justify-content-center align-items-center">
    <div class="row row-cols-auto align-items-center">
        <h2>Lista användare</h2>
    </div>
</div>

@if (AuthManager.IsAdmin)
{
    <div class="container">
        <div class="row g-3 mb-5 justify-content-center align-items-center">
            <div class="col col-8" style="max-width: 300px;">
                <table class="table table-striped table-bordered table-hover">
                    <thead>
                    <tr>
                        <th scope="col">Username</th>
                        <th scope="col">Admin</th>
                        <th scope="col"></th>
                    </tr>
                    </thead>
                    <tbody>
                    @foreach (var user in _users)
                    {
                        <tr >
                            <td>@user.Username</td>
                            <td><input type="checkbox" checked="@user.IsAdmin" disabled/></td>
                            <td><NavLink href="@GetUserEditLink(user.Username)" ><span>Edit</span></NavLink></td>
                        </tr>
                    }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
    
    @* <EditForm Model="@User" OnValidSubmit="@HandleValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="form-group">
            <label for="username">Username:</label>
            <InputText id="username" class="form-control" @bind-Value="@User!.Username" />
            <ValidationMessage For="@(() => User!.Username)" />
        </div>

        <div class="form-group">
            <label for="password">Password:</label>
            <InputText id="password" class="form-control" type="password" @bind-Value="@User.Password"/>
        </div>
        
        <div class="form-group">
            <label for="isadmin">Is admin:</label>
            <InputCheckbox id="isadmin" class="form-check-input" @bind-Value="@User.IsAdmin" />
        </div>

        <button type="Save" class="btn btn-primary">Save</button>
    </EditForm> *@
}


@code {
   
    private NewUserInfo? User { get; set; } = new NewUserInfo();
    
    [Parameter]
    public string[] SocialProviders { get; set; } = Array.Empty<string>();

    private List<UserInfo> _users = new List<UserInfo>();
    
    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        foreach (var user in await Client.GetAllUsers())
        {
            _users.Add(user.ToUserInfo());
        }
        StateHasChanged();
    }
    
    private async Task HandleValidSubmit()
    {
        if (User == null)
        {
            // Todo add error handling
            return;
        }
        
        // Save the newUser changes here
        if (!await Client.CreateUserAsync(User))
        {
            // Todo add error handling
            return;
        }
        _users.Add(User.ToUserInfo());
        StateHasChanged();
    }
    string GetUserEditLink(string username)
    {
        return $"/admin/users/edit/{username}";
    }

}